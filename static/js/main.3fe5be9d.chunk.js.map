{"version":3,"sources":["p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/AlternativeAffairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JunPlus.tsx","p2-homeworks/h5/RoutesComponent.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","to","Error404","Message","props","className","f","message","src","avatar","name","time","AlternativeMessage","messageData","HW1","Affair","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","AlternativeAffairs","n","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","value","onChange","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","console","log","trimmedName","trim","alert","HW3","setUsers","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","testSpanError","blue","disabled","PreJunior","Junior","JunPlus","PATH","RoutesComponent","path","element","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,gBCA1HD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,oBAAoB,cAAgB,6B,iBCAxFD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,0B,gBCA9DD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,2B,gBCA/DD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,iBCA7ED,EAAOC,QAAU,CAAC,IAAM,mB,gBCAxBD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,MAAQ,0B,wIC8BnDC,MA5Bf,WACI,OACI,gCACI,+BACI,6BACI,cAAC,IAAD,CAASC,GAAG,cAAZ,yBAIJ,6BACI,cAAC,IAAD,CAASA,GAAG,UAAZ,sBAIJ,6BACI,cAAC,IAAD,CAASA,GAAG,eAAZ,0BAbZ,sB,OCOOC,MAVf,WACI,OACI,gCACI,sCACA,kDACA,uF,iBCgBGC,MAXf,SAAiBC,GACb,OACI,sBAAKC,UAAWC,IAAEC,QAAlB,UACI,qBAAKC,IAAKJ,EAAMK,OAAQJ,UAAWC,IAAEG,SACpCL,EAAMM,KACNN,EAAMG,QACNH,EAAMO,SCRJC,MARf,WACI,OACI,mDCAFC,EACM,qFADNA,EAEI,QAFJA,EAGO,YAHPA,EAII,QA2BKC,MAvBf,WACI,OACI,gCACI,uBADJ,kHAMG,cAAC,EAAD,CACKL,OAAQI,EACRH,KAAMG,EACNN,QAASM,EACTF,KAAME,IAGV,uBAEA,cAAC,EAAD,IACA,2B,OCLGE,MAhBf,SAAgBX,GAOZ,OACI,gCACKA,EAAMY,OAAON,KADlB,MAC2BN,EAAMY,OAAOC,SAEpC,wBAAQC,QAVO,WAEnBd,EAAMe,qBAAqBf,EAAMY,OAAOI,MAQpC,mBCiBGC,MA3Bf,SAAiBjB,GACb,IAAMkB,EAAgBlB,EAAMmB,KAAKC,KAAI,SAACC,GAAD,OACjC,cAAC,EAAD,CAEIT,OAAQS,EACRN,qBAAsBf,EAAMe,sBAFvBM,EAAEL,QAWf,OACI,gCAEKE,EAED,wBAAQJ,QAVD,WAAOd,EAAMsB,UAAU,QAU9B,iBACA,wBAAQR,QAVA,WAAOd,EAAMsB,UAAU,SAU/B,kBACA,wBAAQR,QAVE,WAAOd,EAAMsB,UAAU,WAUjC,oBACA,wBAAQR,QAVD,WAAOd,EAAMsB,UAAU,QAU9B,qBCPGC,MAjBf,SAA4BvB,GACxB,OACI,qEAGR,6BACKA,EAAMmB,KAAKC,KAAI,SAACI,GACb,OAAQ,6BAAKA,EAAElB,gBCDjBmB,EAAoC,CACtC,CAACT,IAAK,EAAGV,KAAM,QAASO,SAAU,QAClC,CAACG,IAAK,EAAGV,KAAM,QAASO,SAAU,OAClC,CAACG,IAAK,EAAGV,KAAM,QAASO,SAAU,OAClC,CAACG,IAAK,EAAGV,KAAM,OAAQO,SAAU,QACjC,CAACG,IAAK,EAAGV,KAAM,aAAcO,SAAU,WAkD5Ba,MApCf,WAAgB,IAAD,EACmBC,mBAA4BF,GAD/C,mBACJG,EADI,KACKC,EADL,OAEiBF,mBAAqB,OAFtC,mBAEJG,EAFI,KAEIR,EAFJ,KAILS,EAdmB,SAACH,EAA4BE,GACtD,MAAe,QAAXA,EAAyBF,EACjBA,EAAQE,QAAO,SAAA5B,GAAC,OAAEA,EAAEW,WAAWiB,KAYnBE,CAAcJ,EAASE,GAQ/C,OACI,gCACI,uBADJ,cAKI,cAAC,EAAD,CACIX,KAAMY,EACNT,UAAWA,EACXP,qBAhBiB,SAACC,GAC1Ba,EAZoB,SAACD,EAA4BZ,GACrD,OAAOY,EAAQE,QAAO,SAAA5B,GAAC,OAAEA,EAAEc,KAAKA,KAWjBiB,CAAaL,EAASZ,OAkB7B,uBAEA,cAAC,EAAD,CAEAG,KAAMM,IAGN,2B,yBCrCGS,EAf+B,SAAC,GAEzC,IADD5B,EACA,EADAA,KAAM6B,EACN,EADMA,gBAAiBC,EACvB,EADuBA,QAASC,EAChC,EADgCA,MAAOC,EACvC,EADuCA,WAElCC,EAAaC,IAAEH,MAErB,OACI,gCACI,uBAAOI,MAAOnC,EAAMoC,SAAUP,EAAiBlC,UAAWsC,IAC1D,+BAAOF,IACP,wBAAQvB,QAASsB,EAAjB,iBACA,+BAAOE,QCiCJK,EAzCiD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,gBAAqB,EAClElB,mBAAiB,IADiD,mBACnFrB,EADmF,KAC7EwC,EAD6E,OAEhEnB,mBAAiB,IAF+C,mBAEnFU,EAFmF,KAE5EU,EAF4E,KA4BpFT,EAAaM,EAAMI,OAEzB,OACI,cAAC,EAAD,CACI1C,KAAMA,EACN6B,gBA7BgB,SAACc,GACrBH,EAAQG,EAAEC,cAAcT,OACxBU,QAAQC,IAAIH,EAAEC,cAAcT,QA4BxBL,QA1BQ,WAEZ,IAAIiB,EAAY/C,EAAKgD,OAElBhD,GAEC6C,QAAQC,IAAI9C,GACZiD,MAAM,SAAYF,EAAc,KAChCR,EAAgBQ,GAChBN,EAAS,KAITA,EAAS,sBAcTV,MAAOA,EACPC,WAAYA,K,QCZTkB,MA1Bf,WAAgB,IAAD,EACe7B,mBAA0B,IADzC,mBACJiB,EADI,KACGa,EADH,KAUX,OACI,gCACI,uBADJ,cAKI,cAAC,EAAD,CAAmBb,MAAOA,EAAOC,gBAbjB,SAACvC,GACrBmD,EAAS,GAAD,mBAAKb,GAAL,CAAY,CAAC5B,IAAK0C,cAAMpD,KAAMA,MACtC6C,QAAQC,IAAI,wBAA0BR,EAAMI,QAC5CG,QAAQC,IAAI,SAAW9C,GACvB6C,QAAQC,IAAIR,MAWR,uBAGA,2B,+BC2BGe,EA7C2C,SAAC,GAWtD,EATGC,KASF,IARElB,EAQH,EARGA,SAAUmB,EAQb,EARaA,aACVC,EAOH,EAPGA,WAAYC,EAOf,EAPeA,QACZ1B,EAMH,EANGA,MACW2B,GAKd,EALG/D,UAKH,EALc+D,eAGRC,EAEN,6GAeKC,EAAkB,UAAM1B,IAAEH,MAAR,YAAiB2B,GAAgC,IACnEG,EAAmB,UAAM9B,EAAOG,IAAE4B,WAAY5B,IAAE6B,WAA7B,KAGzB,OACI,qCACI,mCACIT,KAAM,OACNlB,SAtBa,SAACO,GACtBP,GACGA,EAASO,GAEZY,GAAgBA,EAAaZ,EAAEC,cAAcT,QAmBrCqB,WAjBe,SAACb,GACxBa,GAAcA,EAAWb,GAEzBc,GACa,UAAVd,EAAEqB,KACFP,KAaK9D,UAAWkE,GAEPF,IAEP5B,GAAS,sBAAMpC,UAAWiE,EAAjB,SAAsC7B,Q,kCC7B7CkC,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAKvE,EAGR,EAHQA,UACFgE,EAEN,mCACKQ,EAAc,UAAMD,EAAMhC,IAAEgC,IAAMhC,IAAEkC,QAAtB,YAAiCzE,GAErD,OACI,oCACIA,UAAWwE,GACPR,K,iBC8BDU,EAxCyC,SAAC,GASpD,EAPGf,KAOF,IANElB,EAMH,EANGA,SAAUkC,EAMb,EANaA,gBACV3E,EAKH,EALGA,UACA4E,GAIH,EALcb,cAKd,EAJGa,UAEGZ,EAEN,4FAeKE,EAAmB,UAAM3B,IAAEsC,SAAR,YAAoB7E,GAAwB,IAErE,OACI,kCACI,mCACI2D,KAAM,WACNlB,SApBa,SAACO,GAElBP,GACAA,EAASO,GAGbE,QAAQC,IAAIH,GAER2B,GACAA,EAAgB3B,EAAEC,cAAc6B,UAY5B9E,UAAWkE,GAEPF,IAEPY,GAAY,sBAAM5E,UAAWuC,IAAEwB,cAAnB,SAAmCa,QCiC7CG,MAzEf,WAAgB,IAAD,EACarD,mBAAiB,IAD9B,mBACJsD,EADI,KACEC,EADF,KAEL7C,EAAQ4C,EAAO,GAAK,QAEpBE,EAAY,WACV9C,EACAkB,MAAM,gFAENA,MAAM0B,IARH,EAYmBtD,oBAAkB,GAZrC,mBAYJoD,EAZI,KAYKK,EAZL,KAeX,OACI,gCACI,uBADJ,cAII,sBAAKnF,UAAWuC,IAAE6C,OAAlB,UACI,cAAC,EAAD,CACI5C,MAAOwC,EACPpB,aAAcqB,EACdnB,QAASoB,EACT9C,MAAOA,EACP2B,cAAexB,IAAE8C,gBAGrB,cAAC,EAAD,CACIrF,UAAWuC,IAAE+C,OAKjB,cAAC,EAAD,sBAIA,cAAC,EAAD,CACIf,KAAG,EACH1D,QAASqE,EAFb,qBAOA,cAAC,EAAD,CAAaK,UAAQ,EAArB,sBAMA,cAAC,EAAD,CACIT,QAASA,EACTH,gBAAiBQ,EAFrB,wBAQA,cAAC,EAAD,CAAeL,QAASA,EAASrC,SA/CxB,SAACO,GAAD,OAAsCmC,EAAWnC,EAAEC,cAAc6B,eAkD9E,uBAKA,2BCvDGU,MAbf,WACI,OACI,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCPCC,EAAS,WAElB,OAEI,uDCPKC,EAAU,WAEnB,OAEI,wCCCKC,EACG,cADHA,GAED,UAFCA,GAGI,eA2CFC,OAvCf,WACI,OACI,8BAGI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAM,IAAKC,QAAS,cAAC,EAAD,MAC3B,cAAC,IAAD,CAAOD,KAAMF,EAAiBG,QAAS,cAAC,EAAD,MACvC,cAAC,IAAD,CAAOD,KAAMF,GAAaG,QAAS,cAAC,EAAD,MACnC,cAAC,IAAD,CAAOD,KAAMF,GAAkBG,QAAS,cAAC,EAAD,MACxC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,YCL1BC,OAdf,WACI,OACI,8BAGI,eAAC,IAAD,WACA,cAAC,EAAD,IAEA,cAAC,GAAD,UCSGC,OAdf,WACI,OACI,sBAAKhG,UAAWuC,IAAEyD,IAAlB,UACI,mDAKD,cAAC,GAAD,QCJSC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCZRC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJC,SAASC,eAAe,SDiIpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAAAC,GACFA,EAAaC,gBAEhBC,OAAM,SAAA7E,GACHc,QAAQd,MAAMA,EAAMlC,c","file":"static/js/main.3fe5be9d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2FVX_\",\"errorInput\":\"SuperInputText_errorInput__1ZnOB\",\"error\":\"SuperInputText_error__1iWCp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1AI93\",\"column\":\"HW4_column__19d80\",\"testSpanError\":\"HW4_testSpanError__2dXSL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1c8EI\",\"avatar\":\"Message_avatar__ejRA9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1Gpdm\",\"red\":\"SuperButton_red__1lBN2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1WQqu\",\"spanClassName\":\"SuperCheckbox_spanClassName__2uRe9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__p_vQJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__VVbDt\",\"error\":\"Greeting_error__29dBJ\"};","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                <li>\r\n                    <NavLink to=\"/pre-junior\">\r\n                        PreJunior\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/junior\">\r\n                        Junior\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/junior-plus\">\r\n                        JunPlus\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n\r\n\r\n            // add NavLinks\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react'\r\nimport f from './Message.module.css'\r\n\r\ntype messageDataPropsType = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string\r\n\r\n}\r\n\r\n\r\nfunction Message(props:messageDataPropsType) {\r\n    return (\r\n        <div className={f.message}>\r\n            <img src={props.avatar} className={f.avatar}/>\r\n            {props.name}\r\n            {props.message}\r\n            {props.time}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\n\r\nfunction AlternativeMessage() {\r\n    return (\r\n        <div>\r\nI'm alt message\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlternativeMessage\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\nimport AlternativeMessage from \"./AlternativeMessage\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Artem',\r\n    message: 'some text',\r\n    time: '22:00'\r\n}\r\n\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            should work (должно работать)\r\n\r\n           <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            <AlternativeMessage/>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id:number)=>any // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n\r\n        props.deleteAffairCallback(props.affair._id)\r\n\r\n    }// need to fix\r\n\r\n    return (\r\n        <div>\r\n            {props.affair.name} - {props.affair.priority}\r\n\r\n            <button onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (value: FilterType)=>void\r\n    deleteAffairCallback: (_id:number)=>void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter(\"all\")} // need to fix\r\n    const setHigh = () => {props.setFilter(\"high\")}\r\n    const setMiddle = () => {props.setFilter(\"middle\")}\r\n    const setLow = () => {props.setFilter(\"low\")}\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\n\r\ntype PropsType={\r\n\r\n    data: Array<AffairType>\r\n}\r\n\r\nfunction AlternativeAffairs(props:PropsType) {\r\n    return (\r\n        <div>\r\nThis is alternative Affairs Names:\r\n\r\n<ul>\r\n    {props.data.map((n)=> {\r\n        return (<li>{n.name}</li>)\r\n    }\r\n\r\n\r\n        )}\r\n</ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlternativeAffairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\nimport AlternativeAffairs from \"./AlternativeAffairs\";\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle' // need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: string\r\n} // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n    else return affairs.filter(f=>f.priority===filter)// need to fix\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id:number): Array<AffairType> => { // need to fix any\r\n    return affairs.filter(f=>f._id!=_id)\r\n\r\n    // need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => {\r\n        setAffairs(deleteAffair(affairs, _id))\r\n\r\n    } // need to fix any\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            <AlternativeAffairs\r\n\r\n            data={defaultAffairs}\r\n\r\n            />\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: any // need to fix any\r\n    setNameCallback: any // need to fix any\r\n    addUser: any // need to fix any\r\n    error: any // need to fix any\r\n    totalUsers: any // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = s.error // need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\r\n            <span>{error}</span>\r\n            <button onClick={addUser}>add</button>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string)=>void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        setName(e.currentTarget.value) // need to fix\r\n        console.log(e.currentTarget.value)\r\n    }\r\n    const addUser = () => {\r\n\r\n        let trimmedName=name.trim();\r\n\r\n        if(name) {\r\n\r\n            console.log(name)\r\n            alert('Hello '  + trimmedName + '!') // need to fix\r\n            addUserCallback(trimmedName)\r\n            setError(\"\")\r\n\r\n        } else {\r\n\r\n            setError(\"Please enter name\")\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react';\r\nimport GreetingContainer from './GreetingContainer';\r\nimport {v1} from 'uuid';\r\n\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string// need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([ ]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        setUsers([...users, {_id: v1(), name: name}]) // need to fix\r\n        console.log(\"this is users length:\" + users.length)\r\n        console.log(\"name: \" + name)\r\n        console.log(users)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error? s.errorInput: s.superInput} ` // need to fix with (?:) and s.superInput\r\n   // const finalInputClassName = `${s.errorInput} ${className? s.superInput : ''}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        if (onChange) {\r\n            onChange(e)\r\n        }\r\n\r\n        console.log(e)\r\n\r\n        if (onChangeChecked) {\r\n            onChangeChecked(e.currentTarget.checked)\r\n        }\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","\r\n\r\n\r\n\r\n\r\nexport const Junior = () => {\r\n\r\n    return (\r\n\r\n        <div>This is Junior page</div>\r\n\r\n\r\n    )\r\n\r\n}","\r\n\r\nexport const JunPlus = () => {\r\n\r\n    return (\r\n\r\n        <div>Jun+</div>\r\n\r\n    )\r\n\r\n\r\n}","import React from 'react'\r\nimport {BrowserRouter, Navigate, Route, Routes} from \"react-router-dom\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport {Junior} from \"./pages/Junior\";\r\nimport {JunPlus} from \"./pages/JunPlus\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus',\r\n    // add paths\r\n}\r\n\r\nfunction RoutesComponent() {\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Routes>\r\n                <Route path={'/'} element={<PreJunior/>}/>\r\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\r\n                <Route path={PATH.JUNIOR_PLUS} element={<JunPlus/>}/>\r\n                <Route path=\"*\" element={<Error404/>}/>\r\n            </Routes>\r\n\r\n\r\n\r\n\r\n\r\n            {/*/!*Switch выбирает первый подходящий роут*!/*/}\r\n            {/*<Routes>*/}\r\n\r\n            {/*/!*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*!/*/}\r\n            {/*/!*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*!/*/}\r\n            {/*<Route  path={'/'}  element={() => <Navigate to={'/pre-junior'}/>}   />*/}\r\n            {/*/!*<Route  path={'/'}  element={() => <Navigate to={PATH.PRE_JUNIOR}/>}/>*!/*/}\r\n\r\n            {/*/!*<Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>*!/*/}\r\n            {/*/!*<Route path='/pre-junior' element={()=> <PreJunior/>} />*!/*/}\r\n            {/*    // add routes*/}\r\n\r\n            {/*/!*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*!/*/}\r\n            {/*<Route render={() => <Error404/>}/>*/}\r\n            {/*    <Route element={() => <Error404/>}/>*/}\r\n\r\n\r\n           {/*</Routes>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RoutesComponent\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport RoutesComponent from './RoutesComponent'\r\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n\r\n            <HashRouter>\r\n            <Header/>\r\n\r\n            <RoutesComponent/>\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from '../../../p2-homeworks/h2/HW2'\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n           <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n// My comment\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}